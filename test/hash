#!/usr/bin/env bash

# Common bash functions.
# Copyright (C) 2025 James Hanlon [mailto:jim@hanlonsoftware.com]
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

set -eu
# set -xv

function run() {
    docker run -i --rm 1121citrus/ha-bash-base:latest "${@}"
}

status=0


#### md5()
# Returns the [MD5](https://www.rfc-editor.org/rfc/rfc1321.html) message digest of standard input.

([[ $(seq 1 10 | run md5) == "3b0332e02daabf31651a5a0d81ba830a" ]] && echo md5 succeeded) || { echo md5 failed; status=1; }


#### sha1()
# Returns the SHA-1 message digest of standard input.

([[ $(seq 1 10 | run sha1) == "612ca68d0305c821750a452e9d5bf050e915824f" ]] && echo sha1 succeeded) || { echo sha1 failed; status=1; }


#### sha224()
# Returns the SHA-224 message digest of standard input.

([[ $(seq 1 10 | run sha224) == "27cbcb9e6bbd5123bb897c1b11c6e2c36dfc7ec75cd2e194c4aac7ad" ]] && echo sha224 succeeded) || { echo sha224 failed; status=1; }


#### sha256()
# Returns the SHA-256 message digest of standard input.

([[ $(seq 1 10 | run sha256) == "bf794518e35d7f1ce3a50b3058c4191bb9401e568fc645d77e10b0f404cf1f22" ]] && echo sha256 succeeded) || { echo sha256 failed; status=1; }


#### sha384()
# Returns the SHA-384 message digest of standard input.

([[ $(seq 1 10 | run sha384) == "0f376e63af6e9e5b06754b45ac75416c940c21f699be861ff6da9d395fed13e5de416865b8e382bb00d3fdb4f6629fd5" ]] && echo sha384 succeeded) || { echo sha384 failed; status=1; }


#### sha512()
# Returns the SHA-512 message digest of standard input.

([[ $(seq 1 10 | run sha512) == "63ea70d6ef287c5a1db399ef6963bd02bb8d97d654b205feb824afde68abd0ef44e9801190ae3e874765dcad041773362ef469828d39f89dbf310b016742aa9c" ]] && echo sha512 succeeded) || { echo sha512 failed; status=1; }


#### sha512-224()
# Returns the SHA-512/224 message digest of standard input.

([[ $(seq 1 10 | run sha512-224) == "20620f3f6ff46d9c47de3a13bbbc224f11daf96cf57f1b3864480e9f" ]] && echo sha512-224 succeeded) || { echo sha512-224 failed; status=1; }


#### sha512-256()
# Returns the SHA-512/256 message digest of standard input.

([[ $(seq 1 10 | run sha512-256) == "33baa4c33851469a9b7cac95dc969578eb0ee37705de47c6776fca4e2dba82ff" ]] && echo sha512-256  succeeded) || { echo sha512-256 failed; status=1; }


exit $status
